{"version":3,"sources":["modules/topic/scripts.js","modules/date/scripts.js","modules/comments/form.js","modules/comments/scripts.js","index.js"],"names":["makeTopic","json","className","title","content","map","p","i","key","details","name","date","getDate","Date","day","slice","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","Form","state","author","text","ev","preventDefault","FORM","document","querySelector","authorVal","value","textVal","list","localStorage","getItem","JSON","parse","push","btn","removeItem","setItem","stringify","this","setState","target","id","action","onSubmit","submitComment","htmlFor","type","required","placeholder","onChange","changeValue","React","Component","CommentsList","loadList","addEventListener","tagName","noList","length","forEach","item","j","window","confirm","arr","onMouseOver","toggleBtn","onMouseOut","onClick","delItem","Comments","renderMain","topic","ReactDOM","render","fetch","then","response","ok"],"mappings":"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","file":"static/js/main.5b2aa34c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nconst makeTopic = (json) => {\r\n return (json) ? (\r\n     <article className=\"topic\">\r\n       <h2 className=\"topic__title\">{json.title}</h2>\r\n       {\r\n         json.content.map((p, i) => {\r\n           return (\r\n               <p key={i} className=\"topic__p\">\r\n                 {p}\r\n               </p>\r\n           )\r\n         })\r\n       }\r\n       <address className=\"topic__author\">\r\n         <span className=\"topic__name\">{json.details.name}</span>\r\n         <span className=\"topic__date\">{json.details.date}</span>\r\n       </address>\r\n     </article>\r\n ) : (\r\n     <div className=\"topic\">\r\n       <div className=\"error-wrapper\">\r\n         <p className=\"error\">Ошибка сервера</p>\r\n       </div>\r\n     </div>\r\n );\r\n}\r\n\r\nexport default makeTopic;","const getDate = () => {\r\n  const date = new Date();\r\n  const day = `0${date.getDate()}`.slice(-2);\r\n  const month = `0${date.getMonth()}`.slice(-2);\r\n  const year = date.getFullYear();\r\n  const hours = `0${date.getHours()}`.slice(-2);\r\n  const minutes = `0${date.getMinutes()}`.slice(-2);\r\n\r\n  return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n}\r\n\r\nexport default getDate;","import React from \"react\";\r\nimport './form.css';\r\nimport getDate from \"../date/scripts\";\r\n\r\nclass Form extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      author: '',\r\n      text: ''\r\n    }\r\n  }\r\n\r\n  submitComment(ev) {\r\n    ev.preventDefault();\r\n\r\n    const FORM = document.querySelector('.comments__form');\r\n    const authorVal = FORM.querySelector('#author').value;\r\n    const textVal = FORM.querySelector('#text').value;\r\n    const date = getDate();\r\n\r\n    const list = (localStorage.getItem('commentsList'))\r\n        ? JSON.parse(localStorage.getItem('commentsList'))\r\n        : [];\r\n\r\n    list.push({\r\n      name: authorVal,\r\n      text: textVal,\r\n      date: date,\r\n      btn: false\r\n    });\r\n\r\n    localStorage.removeItem('commentsList');\r\n    localStorage.setItem('commentsList', JSON.stringify(list));\r\n\r\n    this.setState({\r\n      author: '',\r\n      text: ''\r\n    });\r\n  }\r\n\r\n  changeValue(ev) {\r\n    const {id, value} = ev.target;\r\n    switch (id) {\r\n      case 'author': this.setState({author: value}); break;\r\n      case 'text': this.setState({text: value}); break;\r\n      default: break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <form action=\"#\"\r\n              className=\"comments__form\"\r\n              onSubmit={ev => this.submitComment(ev)}>\r\n          <label htmlFor=\"author\" className=\"visually-hidden\">Имя:</label>\r\n          <input type=\"text\" id=\"author\" required={true}\r\n                 className=\"comments__author\"\r\n                 placeholder=\"Ваше имя\"\r\n                 value={this.state.author}\r\n                 onChange={ev => this.changeValue(ev)}/>\r\n          <label htmlFor=\"text\" className=\"visually-hidden\">Текст комментария:</label>\r\n          <textarea id=\"text\" required={true}\r\n                    className=\"comments__textarea\"\r\n                    placeholder=\"Ваш комментарий\"\r\n                    value={this.state.text}\r\n                    onChange={ev => this.changeValue(ev)}/>\r\n          <input type=\"submit\" className=\"comments__submit\" value=\"Оставить комментарий\"/>\r\n        </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport './style.css';\r\nimport Form from './form';\r\n\r\nclass CommentsList extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      list: this.loadList()\r\n    };\r\n\r\n    document.addEventListener('submit', ev => {\r\n      if (ev.target.tagName === 'FORM') this.setState({list: this.loadList()});\r\n    });\r\n  }\r\n\r\n  loadList() {\r\n    const list = JSON.parse(localStorage.getItem('commentsList'));\r\n    const noList = ['Нет комментариев.'];\r\n    return (!list) ? noList : (list.length) ? list : noList;\r\n  }\r\n\r\n  toggleBtn(i, key) {\r\n    const {list} = this.state;\r\n    list.forEach((item, j) => {\r\n      if (j === i) item.btn = key;\r\n    });\r\n    this.setState({list: list});\r\n  }\r\n\r\n  delItem(i) {\r\n    const userAnswer = window.confirm('Вы действительно хотите удалить комментарий?');\r\n    if (!userAnswer) return;\r\n\r\n    const arr = [];\r\n    this.state.list.forEach((item, j) => {\r\n      if (j !== i) arr.push(item);\r\n    });\r\n\r\n    localStorage.removeItem('commentsList');\r\n    localStorage.setItem('commentsList', JSON.stringify(arr));\r\n\r\n    this.setState({list: this.loadList()});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <ul className=\"comments__list\">\r\n          {\r\n            this.state.list.map((item, i) => {\r\n              return (typeof item === 'object') ? (\r\n                  <li key={i}\r\n                      className=\"comments__item\"\r\n                      onMouseOver={() => this.toggleBtn(i, true)}\r\n                      onMouseOut={() => this.toggleBtn(i, false)}>\r\n                    <div className=\"comments__user\">\r\n                      <h3 className=\"comments__name\">\r\n                        {item.name}\r\n                      </h3>\r\n                      <span className=\"comments__date\">\r\n                        {item.date}\r\n                      </span>\r\n                    </div>\r\n                    <p className=\"comments__text\">\r\n                      {item.text}\r\n                    </p>\r\n                    <div className=\"comments__actions\">\r\n                      <button key={i} className={\r\n                        (item.btn)\r\n                            ? \"comments__del comments__del--active\"\r\n                            : \"comments__del\"}\r\n                              onClick={() => this.delItem(i)}>\r\n                        удалить\r\n                      </button>\r\n                    </div>\r\n                  </li>\r\n              ) : (\r\n                  <li key={i} className=\"comments__nothing\">\r\n                    {item}\r\n                  </li>\r\n              );\r\n            })\r\n          }\r\n        </ul>\r\n    )\r\n  }\r\n}\r\n\r\nconst Comments = () => {\r\n  return (\r\n      <div className=\"comments\">\r\n        <h2 className=\"comments__title\">Комментарии</h2>\r\n        <CommentsList/>\r\n        <Form/>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Comments;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport makeTopic from './modules/topic/scripts';\r\nimport Comments from './modules/comments/scripts';\r\n\r\nconst renderMain = topic => {\r\n  ReactDOM.render(\r\n      <div className=\"wrapper\">\r\n        {topic}\r\n        <Comments/>\r\n      </div>,\r\n      document.querySelector('.main')\r\n  )\r\n}\r\n\r\nconst getData = () => {\r\n  fetch('https://maxkiner.github.io/server/topic.json')\r\n      .then(response => {\r\n        (response.ok)\r\n            ? response.json().then(json => renderMain(makeTopic(json)))\r\n            : renderMain(makeTopic(null));\r\n      });\r\n}\r\n\r\ngetData();"],"sourceRoot":""}